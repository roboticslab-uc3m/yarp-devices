/*
 * SPDX-FileCopyrightText: 2023-2023 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */


// Generated by yarpDeviceParamParserGenerator (1.0)
// This is an automatically generated file. Please do not edit it.
// It will be re-generated if the cmake flag ALLOW_DEVICE_PARAM_PARSER_GERNERATION is ON.

// Generated on: Sun Apr 20 14:33:40 2025


#ifndef CANBUSBROKER_PARAMSPARSER_H
#define CANBUSBROKER_PARAMSPARSER_H

#include <yarp/os/Searchable.h>
#include <yarp/dev/IDeviceDriverParams.h>
#include <string>
#include <cmath>

/**
* This class is the parameters parser for class CanBusBroker.
*
* These are the used parameters:
* | Group name | Parameter name | Type           | Units | Default Value | Required | Description            | Notes |
* |:----------:|:--------------:|:--------------:|:-----:|:-------------:|:--------:|:----------------------:|:-----:|
* | -          | buses          | vector<string> | -     | -             | 1        | CAN buses              | -     |
* | -          | syncPeriod     | double         | s     | 0.0           | 0        | synchronization period | -     |
*
* The device can be launched by yarpdev using one of the following examples (with and without all optional parameters):
* \code{.unparsed}
* yarpdev --device CanBusBroker --buses <mandatory_value> --syncPeriod 0.0
* \endcode
*
* \code{.unparsed}
* yarpdev --device CanBusBroker --buses <mandatory_value>
* \endcode
*
*/

class CanBusBroker_ParamsParser : public yarp::dev::IDeviceDriverParams
{
public:
    CanBusBroker_ParamsParser();
    ~CanBusBroker_ParamsParser() override = default;

public:
    const std::string m_device_classname = {"CanBusBroker"};
    const std::string m_device_name = {"CanBusBroker"};
    bool m_parser_is_strict = false;
    struct parser_version_type
    {
         int major = 1;
         int minor = 0;
    };
    const parser_version_type m_parser_version = {};

    const std::string m_buses_defaultValue = {""};
    const std::string m_syncPeriod_defaultValue = {"0.0"};

    std::vector<std::string> m_buses = {}; //This default value is autogenerated. It is highly recommended to provide a suggested value also for mandatory parameters.
    double m_syncPeriod = {0.0};

    bool          parseParams(const yarp::os::Searchable & config) override;
    std::string   getDeviceClassName() const override { return m_device_classname; }
    std::string   getDeviceName() const override { return m_device_name; }
    std::string   getDocumentationOfDeviceParams() const override;
    std::vector<std::string> getListOfParams() const override;
};

#endif
