/*
 * SPDX-FileCopyrightText: 2023-2023 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */


// Generated by yarpDeviceParamParserGenerator (1.0)
// This is an automatically generated file. Please do not edit it.
// It will be re-generated if the cmake flag ALLOW_DEVICE_PARAM_PARSER_GERNERATION is ON.

// Generated on: Sun Jul 20 01:39:59 2025


#ifndef SPACENAVIGATOR_PARAMSPARSER_H
#define SPACENAVIGATOR_PARAMSPARSER_H

#include <yarp/os/Searchable.h>
#include <yarp/dev/IDeviceDriverParams.h>
#include <string>
#include <cmath>

/**
* This class is the parameters parser for class SpaceNavigator.
*
* These are the used parameters:
* | Group name | Parameter name      | Type   | Units | Default Value | Required | Description                       | Notes              |
* |:----------:|:-------------------:|:------:|:-----:|:-------------:|:--------:|:---------------------------------:|:------------------:|
* | -          | deadband            | double | -     | 0.125         | 0        | deadband                          | contained in [0,1] |
* | -          | fullScaleX          | double | -     | 460.0         | 0        | full scale on translation axis X  | -                  |
* | -          | fullScaleY          | double | -     | 430.0         | 0        | full scale on translation axis Y  | -                  |
* | -          | fullScaleZ          | double | -     | 440.0         | 0        | full scale on translation axis Z  | -                  |
* | -          | fullScaleRX         | double | -     | 415.0         | 0        | full scale on rotation axis X     | -                  |
* | -          | fullScaleRY         | double | -     | 405.0         | 0        | full scale on rotation axis Y     | -                  |
* | -          | fullScaleRZ         | double | -     | 435.0         | 0        | full scale on rotation axis Z     | -                  |
* | -          | maxNoDataIterations | int    | -     | 100           | 0        | reset after this many poll events | -                  |
*
* The device can be launched by yarpdev using one of the following examples (with and without all optional parameters):
* \code{.unparsed}
* yarpdev --device SpaceNavigator --deadband 0.125 --fullScaleX 460.0 --fullScaleY 430.0 --fullScaleZ 440.0 --fullScaleRoll 415.0 --fullScalePitch 405.0 --fullScaleYaw 435.0 --maxNoDataIterations 10
* \endcode
*
* \code{.unparsed}
* yarpdev --device SpaceNavigator
* \endcode
*
*/

class SpaceNavigator_ParamsParser : public yarp::dev::IDeviceDriverParams
{
public:
    SpaceNavigator_ParamsParser();
    ~SpaceNavigator_ParamsParser() override = default;

public:
    const std::string m_device_classname = {"SpaceNavigator"};
    const std::string m_device_name = {"SpaceNavigator"};
    bool m_parser_is_strict = false;
    struct parser_version_type
    {
         int major = 1;
         int minor = 0;
    };
    const parser_version_type m_parser_version = {};

    const std::string m_deadband_defaultValue = {"0.125"};
    const std::string m_fullScaleX_defaultValue = {"460.0"};
    const std::string m_fullScaleY_defaultValue = {"430.0"};
    const std::string m_fullScaleZ_defaultValue = {"440.0"};
    const std::string m_fullScaleRX_defaultValue = {"415.0"};
    const std::string m_fullScaleRY_defaultValue = {"405.0"};
    const std::string m_fullScaleRZ_defaultValue = {"435.0"};
    const std::string m_maxNoDataIterations_defaultValue = {"100"};

    double m_deadband = {0.125};
    double m_fullScaleX = {460.0};
    double m_fullScaleY = {430.0};
    double m_fullScaleZ = {440.0};
    double m_fullScaleRX = {415.0};
    double m_fullScaleRY = {405.0};
    double m_fullScaleRZ = {435.0};
    int m_maxNoDataIterations = {100};

    bool          parseParams(const yarp::os::Searchable & config) override;
    std::string   getDeviceClassName() const override { return m_device_classname; }
    std::string   getDeviceName() const override { return m_device_name; }
    std::string   getDocumentationOfDeviceParams() const override;
    std::vector<std::string> getListOfParams() const override;
};

#endif
